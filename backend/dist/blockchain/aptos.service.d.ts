import { ConfigService } from '@nestjs/config';
import { AptosClient, CoinClient, TokenClient } from 'aptos';
export declare class AptosService {
    private configService;
    private client;
    private coinClient;
    private tokenClient;
    private account;
    private escrowModuleAddress;
    private tokenModuleAddress;
    constructor(configService: ConfigService);
    getClient(): AptosClient;
    getCoinClient(): CoinClient;
    getTokenClient(): TokenClient;
    getAccountAddress(): string;
    createProject(clientAddress: string, workerAddress: string, deadline: number): Promise<string>;
    addMilestone(clientAddress: string, projectId: number, description: string, amount: string, deadline: number): Promise<string>;
    fundProject(clientAddress: string, projectId: number, amount: string): Promise<string>;
    startWork(workerAddress: string, projectId: number): Promise<string>;
    submitMilestone(workerAddress: string, projectId: number, milestoneId: number, evidence: string): Promise<string>;
    registerAsReviewer(reviewerAddress: string): Promise<string>;
    reviewMilestone(reviewerAddress: string, projectId: number, milestoneId: number, approved: boolean): Promise<string>;
    completeMilestone(projectId: number, milestoneId: number): Promise<string>;
    cancelProject(clientAddress: string, projectId: number): Promise<string>;
    getProjectStatus(projectId: number): Promise<number>;
    getMilestoneStatus(projectId: number, milestoneId: number): Promise<number>;
    isReviewer(reviewerAddress: string): Promise<boolean>;
    private submitTransaction;
    private submitTransactionWithAccount;
    verifyWalletOwnership(walletAddress: string, signedMessage: string, message: string): Promise<boolean>;
    verifyZkProofWithGoogle(googleToken: string, walletAddress: string): Promise<boolean>;
    verifyZkProofWithApple(appleToken: string, walletAddress: string): Promise<boolean>;
}
